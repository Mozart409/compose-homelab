services:
  rustypaste:
    image: ghcr.io/orhun/rustypaste/rustypaste:sha-dada3b9
    container_name: rustypaste
    network_mode: service:ts-rustypaste
    restart: unless-stopped
    volumes:
      - rusty_upload:/app/upload
      - ./config/rustyconfig.toml:/app/config.toml
    environment:
      - RUST_LOG=info
  whatsupdocker:
    image: ghcr.io/getwud/wud:8.0.1
    container_name: wud
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: service:ts-wud
    restart: unless-stopped
    labels:
      - 'wud.tag.include=^v\d+\.\d+\.\d+$$'
    healthcheck:
      test: curl --fail http://localhost:${WUD_SERVER_PORT:-3000}/health || exit 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
  grafana:
    container_name: grafana
    depends_on:
      - prometheus
      - ts-grafana
    labels:
      - 'wud.tag.include=^v\d+\.\d+\.\d+$$'
    environment:
      - GF_SERVER_ROOT_URL=http://grafana.dropbear-butterfly.ts.net/
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      timeout: 10s
    image: grafana/grafana-oss:11.4.0
    network_mode: service:ts-grafana
    restart: unless-stopped
    volumes:
      - "grafana_storage:/var/lib/grafana"
      - "./config/provisioning:/etc/grafana/provisioning"
  jellyfin:
    container_name: jellyfin
    labels:
      - 'wud.tag.include=^v\d+\.\d+\.\d+$$'
    deploy:
      resources:
        limits:
          memory: 1000M
    depends_on:
      - pinchflat
      - ts-jellyfin
    environment:
      - PUID=0
      - PGID=0
      - TZ=Etc/CET
      - JELLYFIN_PublishedServerUrl=https://jellyfin.dropbear-butterfly.ts.net
    healthcheck:
      interval: 3m
      retries: 3
      test: ["CMD", "curl", "-f", "http://localhost:8096/health"]
      timeout: 30s
    image: ghcr.io/linuxserver/jellyfin:10.10.3ubu2404-ls45
    network_mode: service:ts-jellyfin
    restart: unless-stopped
    volumes:
      - ${PWD}/jellyfin/library:/config
      - ${PWD}/pinchflat/downloads:/data/movies
  open-webui:
    container_name: open-webui
    labels:
      - 'wud.tag.include=^v\d+\.\d+\.\d+$$'
    depends_on:
      - ts-open-webui
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
    image: ghcr.io/open-webui/open-webui:v0.5.16
    network_mode: service:ts-open-webui
    restart: unless-stopped
    volumes:
      - open-webui:/app/backend/data
  pinchflat:
    container_name: pinchflat
    labels:
      - 'wud.tag.include=^v\d+\.\d+\.\d+$$'
    depends_on:
      - ts-pinchflat
    environment:
      - TZ=Europe/Berlin
      - LOG_LEVEL=info
      - ENABLE_PROMETHEUS=1
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test: ["CMD", "curl", "-f", "http://localhost:8945/healthcheck"]
      timeout: 10s
    image: ghcr.io/kieraneglin/pinchflat:v2025.2.20
    network_mode: service:ts-pinchflat
    restart: unless-stopped
    volumes:
      - ${PWD}/pinchflat/config:/config
      - ${PWD}/pinchflat/downloads:/downloads
  prometheus:
    container_name: prometheus
    labels:
      - 'wud.tag.include=^v\d+\.\d+\.\d+$$'
    depends_on:
      - jellyfin
      - searxng
      - ts-prometheus
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test: ["CMD", "wget", "-nv", "-t1", "--spider", "http://localhost:9090/-/healthy"]
      timeout: 10s
    image: prom/prometheus:v3.2.0
    network_mode: service:ts-prometheus
    restart: unless-stopped
    volumes:
      - ${PWD}/config/prometheus.yml:/etc/prometheus/prometheus.yml
  searxng:
    container_name: searxng
    depends_on:
      - ts-searxng
    environment:
      - BASE_URL=https://searxng.dropbear-butterfly.ts.net/
      - INSTANCE_NAME=SearxNG
    healthcheck:
      interval: 1m30s
      retries: 3
      start_period: 40s
      test: ["CMD", "wget", "-nv", "-t1", "--spider", "0.0.0.0:8080/"]
      timeout: 10s
    image: searxng/searxng:2024.12.29-c1bb0bebd
    labels:
      - homepage.group=Search
      - homepage.name=SearxNG
      - homepage.icon=emby.png
      - homepage.href=http://searxng.home/
      - homepage.description=Meta search engine
      - 'wud.tag.include=^v\d+\.\d+\.\d+$$'
    network_mode: service:ts-searxng
    restart: unless-stopped
    volumes:
      - ${PWD}/searxng:/etc/searxng
  ts-grafana:
    cap_add:
      - net_admin
      - sys_module
    container_name: ts-grafana
    devices:
      - /dev/net/tun:/dev/net/tun
    dns:
      - 100.100.100.100 # For tailnet address (<mach>.<tailnet>.ts.net) lookups.
      - 1.1.1.1 # For external lookups.
    environment:
      - "TS_AUTHKEY=${TS_AUTH_KEY}"
      # - "TS_EXTRA_ARGS=--advertise-tags=tag:container"
      - "TS_SERVE_CONFIG=/config/grafana.json"
      - "TS_STATE_DIR=/var/lib/tailscale"
      - "TS_USERSPACE=false"
    hostname: grafana
    image: tailscale/tailscale:v1.80.0
    restart: unless-stopped
    volumes:
      - ${PWD}/tailscale-grafana/state:/var/lib/tailscale
      - ${PWD}/config:/config
  ts-jellyfin:
    cap_add:
      - net_admin
      - sys_module
    container_name: ts-jellyfin
    devices:
      - /dev/net/tun:/dev/net/tun
    dns:
      - 100.100.100.100 # For tailnet address (<mach>.<tailnet>.ts.net) lookups.
      - 1.1.1.1 # For external lookups.
    environment:
      - "TS_AUTHKEY=${TS_AUTH_KEY}"
      # - "TS_EXTRA_ARGS=--advertise-tags=tag:container"
      - "TS_SERVE_CONFIG=/config/jellyfin.json"
      - "TS_STATE_DIR=/var/lib/tailscale"
      - "TS_USERSPACE=false"
    hostname: jellyfin
    image: tailscale/tailscale:v1.80.0
    restart: unless-stopped
    volumes:
      - ${PWD}/tailscale-jellyfin/state:/var/lib/tailscale
      - ${PWD}/config:/config
  ts-open-webui:
    cap_add:
      - net_admin
      - sys_module
    container_name: ts-open-webui
    devices:
      - /dev/net/tun:/dev/net/tun
    dns:
      - 100.100.100.100 # For tailnet address (<mach>.<tailnet>.ts.net) lookups.
      - 1.1.1.1 # For external lookups.
    environment:
      - "TS_AUTHKEY=${TS_AUTH_KEY}"
      # - "TS_EXTRA_ARGS=--advertise-tags=tag:container"
      - "TS_SERVE_CONFIG=/config/openwebui.json"
      - "TS_STATE_DIR=/var/lib/tailscale"
      - "TS_USERSPACE=false"
    hostname: openwebui
    image: tailscale/tailscale:v1.80.0
    restart: unless-stopped
    volumes:
      - ${PWD}/tailscale-open-webui/state:/var/lib/tailscale
      - ${PWD}/config:/config
  ts-pinchflat:
    cap_add:
      - net_admin
      - sys_module
    container_name: ts-pinchflat
    devices:
      - /dev/net/tun:/dev/net/tun
    dns:
      - 100.100.100.100 # For tailnet address (<mach>.<tailnet>.ts.net) lookups.
      - 1.1.1.1 # For external lookups.
    environment:
      - "TS_AUTHKEY=${TS_AUTH_KEY}"
      # - "TS_EXTRA_ARGS=--advertise-tags=tag:container"
      - "TS_SERVE_CONFIG=/config/pinchflat.json"
      - "TS_STATE_DIR=/var/lib/tailscale"
      - "TS_USERSPACE=false"
    hostname: pinchflat
    image: tailscale/tailscale:v1.80.0
    restart: unless-stopped
    volumes:
      - ${PWD}/tailscale-pinchflat/state:/var/lib/tailscale
      - ${PWD}/config:/config
  ts-prometheus:
    cap_add:
      - net_admin
      - sys_module
    container_name: ts-prometheus
    devices:
      - /dev/net/tun:/dev/net/tun
    dns:
      - 100.100.100.100 # For tailnet address (<mach>.<tailnet>.ts.net) lookups.
      - 1.1.1.1 # For external lookups.
    environment:
      - "TS_AUTHKEY=${TS_AUTH_KEY}"
      # - "TS_EXTRA_ARGS=--advertise-tags=tag:container"
      - "TS_SERVE_CONFIG=/config/prometheus.json"
      - "TS_STATE_DIR=/var/lib/tailscale"
      - "TS_USERSPACE=false"
    hostname: prometheus
    image: tailscale/tailscale:v1.80.0
    restart: unless-stopped
    volumes:
      - ${PWD}/tailscale-prometheus/state:/var/lib/tailscale
      - ${PWD}/config:/config
  ts-searxng:
    cap_add:
      - net_admin
      - sys_module
    container_name: ts-searxng
    devices:
      - /dev/net/tun:/dev/net/tun
    dns:
      - 100.100.100.100 # For tailnet address (<mach>.<tailnet>.ts.net) lookups.
      - 1.1.1.1 # For external lookups.
    environment:
      - "TS_AUTHKEY=${TS_AUTH_KEY}"
      # - "TS_EXTRA_ARGS=--advertise-tags=tag:container"
      - "TS_SERVE_CONFIG=/config/searxng.json"
      - "TS_STATE_DIR=/var/lib/tailscale"
      - "TS_USERSPACE=false"
    hostname: searxng
    image: tailscale/tailscale:v1.80.0
    restart: unless-stopped
    volumes:
      - ${PWD}/tailscale-searxng/state:/var/lib/tailscale
      - ${PWD}/config:/config
  ts-wud:
    cap_add:
      - net_admin
      - sys_module
    container_name: ts-wud
    devices:
      - /dev/net/tun:/dev/net/tun
    dns:
      - 100.100.100.100 # For tailnet address (<mach>.<tailnet>.ts.net) lookups.
      - 1.1.1.1 # For external lookups.
    environment:
      - "TS_AUTHKEY=${TS_AUTH_KEY}"
      # - "TS_EXTRA_ARGS=--advertise-tags=tag:container"
      - "TS_SERVE_CONFIG=/config/wud.json"
      - "TS_STATE_DIR=/var/lib/tailscale"
      - "TS_USERSPACE=false"
    hostname: wud
    image: tailscale/tailscale:v1.80.0
    restart: unless-stopped
    labels:
      - 'wud.tag.include=^v\d+\.\d+\.\d+$$'
      - "wud.tag.exclude=unstable"
    volumes:
      - ${PWD}/tailscale-wud-data/state:/var/lib/tailscale
      - ${PWD}/config:/config
  ts-rustypaste:
    cap_add:
      - net_admin
      - sys_module
    container_name: ts-rustypaste
    devices:
      - /dev/net/tun:/dev/net/tun
    dns:
      - 100.100.100.100 # For tailnet address (<mach>.<tailnet>.ts.net) lookups.
      - 1.1.1.1 # For external lookups.
    environment:
      - "TS_AUTHKEY=${TS_AUTH_KEY}"
      # - "TS_EXTRA_ARGS=--advertise-tags=tag:container"
      - "TS_SERVE_CONFIG=/config/rustypaste.json"
      - "TS_STATE_DIR=/var/lib/tailscale"
      - "TS_USERSPACE=false"
    hostname: wud
    image: tailscale/tailscale:v1.80.0
    restart: unless-stopped
    labels:
      - 'wud.tag.include=^v\d+\.\d+\.\d+$$'
      - "wud.tag.exclude=unstable"
    volumes:
      - ${PWD}/tailscale-rustypaste-data/state:/var/lib/tailscale
      - ${PWD}/config:/config
volumes:
  grafana_storage: {}
  rusty_upload: {}
  open-webui:
    external: true
    name: open-webui
